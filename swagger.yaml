openapi: 3.0.0
info:
  title: Jobs API
  contact: {}
  version: "1.0"
servers:
  - url: https://jobs-api-yt3e.onrender.com/api/v1
    variables: {}
paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: User Register
      operationId: UserRegister
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/UserRegisterRequest"
                - example:
                    name: zaid
                    email: zaid@gmail.com
                    password: password
            example:
              name: zaid
              email: zaid@gmail.com
              password: password
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
        - Auth
      summary: User Login
      operationId: UserLogin
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/UserLoginRequest"
                - example:
                    email: zaid@gmail.com
                    password: password
            example:
              email: zaid@gmail.com
              password: password
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
  /jobs:
    post:
      tags:
        - Jobs
      summary: Create Job
      operationId: CreateJob
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/CreateJobRequest"
                - example:
                    company: noCompany
                    position: backend
            example:
              company: noCompany
              position: backend
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    get:
      tags:
        - Jobs
      summary: Get All Jobs
      operationId: GetAllJobs
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /jobs/{id}:
    get:
      tags:
        - Jobs
      summary: Get Job
      operationId: GetJob
      parameters:
        - name: id
          in: path
          description: The job ID
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    patch:
      tags:
        - Jobs
      summary: Update Job
      operationId: UpdateJob
      parameters:
        - name: id
          in: path
          description: The job ID
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/UpdateJobRequest"
                - example:
                    company: noCompany
                    position: backend
            example:
              company: noCompany
              position: backend
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    delete:
      tags:
        - Jobs
      summary: Delete JOb
      operationId: DeleteJOb
      parameters:
        - name: id
          in: path
          description: The job ID
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
components:
  schemas:
    UserRegisterRequest:
      title: UserRegisterRequest
      required:
        - name
        - email
        - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: zaid
        email: zaid@gmail.com
        password: pass
    UserLoginRequest:
      title: UserLoginRequest
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: zaid@gmail.com
        password: pass
    CreateJobRequest:
      title: CreateJobRequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: noCompany
        position: backend
    UpdateJobRequest:
      title: UpdateJobRequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: noCompany
        position: backend
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
  - name: Auth
    description: ""
  - name: Jobs
    description: ""
